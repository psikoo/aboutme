server {
    #########################    Server Conf    #########################
    # Regex fot *.cait.moe 
    server_name ~^(?<subdomain>.+)\.cait\.moe cait.moe;
    root /var/www/aboutme/aboutme-frontend;
    index index.html;
    #########################    Server Conf    #########################

    ######################### SSL Certbot magic #########################
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/cait.moe/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cait.moe/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ######################### SSL Certbot magic #########################

    #########################      Headers      #########################
    # Allow CORS from any origin
    add_header Access-Control-Allow-Origin *;
    # Block embeds/frames from external sites
    add_header X-Frame-Options "SAMEORIGIN";
    # Block loading any script or style from other origins
    add_header Content-Security-Policy "default-src 'self' cait.moe *.cait.moe cait.moe:3000; img-src *";
    # Removes the refer header
    add_header Referrer-Policy "no-referrer";
    #########################      Headers      #########################

    #########################     Locations     #########################
    # Redirect cait.moe to www.cait.moe
    if ($subdomain = "") { return 301 https://www.$host$uri; }
    # searching for $arg_file.script.txt is a certainly a way to "stop" path traversal attacks (unless someone is looking for a file ending in .script.txt)
    # Exact match for "/" 
    location = / {
        root /var/www/aboutme/aboutme-frontend/$subdomain;
        try_files /out/index.html /index.html /$arg_file.script.txt  =404;
    }
    # Case-sensitive regex for "/*" 
    location ~ /(.+) {
        try_files /$subdomain$uri /$subdomain$uri/index.html /$subdomain$uri/out/index.html =404;
    }
}

server {
    server_name *.cait.moe cait.moe;
    listen 80;
    return 301 https://$host$request_uri;
}
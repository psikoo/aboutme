server {
    server_name ~^(?<subdomain>.+)\.cait\.moe cait.moe;
    root /var/www/aboutme/aboutme-frontend;
    index index.html;

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/cait.moe/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cait.moe/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    if ($subdomain = "") {
        return 301 https://www.$host$uri;
    }
    location / {
        # searching for $arg_file.script.txt is a certainly a way to "stop" path traversal attacks (unless someone is looking for a file ending in .script.txt)
        try_files /$subdomain/out/index.html /$subdomain/index.html /$subdomain/$arg_file.script.txt  =404;
    }
    location ~ /(.+) {
        add_header Access-Control-Allow-Origin *;
        try_files /$subdomain$uri /$subdomain$uri/index.html /$subdomain$uri/out/index.html =404;
    }
}
server {
    server_name *.quenecesitas.net quenecesitas.net;

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/quenecesitas.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/quenecesitas.net/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    return 301 https://www.cait.moe;
}

server {
    server_name *.cait.moe cait.moe;
    listen 80;
    return 301 https://$host$request_uri;
}
server {
    server_name *.quenecesitas.net quenecesitas.net;
    listen 80;
    return 301 https://www.cait.moe;
}